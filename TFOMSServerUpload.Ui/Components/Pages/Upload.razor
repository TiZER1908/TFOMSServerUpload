@page "/upload/{id}"

@attribute [StreamRendering]
@inject NavigationManager _navMan

<PageTitle>Upload</PageTitle>

<TelerikDrawer Data="@NavigablePages"
               Mode="@DrawerMode.Push"
               @ref="@DrawerRef"
               Expanded=true
               Width="14rem"
               @bind-SelectedItem="@SelectedItem">
    <DrawerContent>
        <div class="upload">
            <p>
                Текущий период: Основная приемка c
                <span class="date-beg">01.01.2024</span> по
                <span class="date-end">05.01.2024</span>
            </p>

            <TelerikGrid Data="@GridData"
                         Class="grid"
                         Sortable="true"
                         Width="80rem"
                         Height="50rem"
                         @ref="@GridRef">
                <GridColumns>
                    <GridColumn Field="Med" 
                                Title="Медицинская организация" 
                                HeaderClass="center-me"/>
                    <GridColumn Field="File" 
                                Title="Файл" 
                                HeaderClass="center-me" 
                                TextAlign="@ColumnTextAlign.Center"/>
                    <GridColumn Width="150px"
                                Field="Status" 
                                Title="Статус загрузки" 
                                HeaderClass="center-me" 
                                TextAlign="@ColumnTextAlign.Center">
                        <Template>
                            @{
                                var change = GetChange((Files)context);
                            }
                            <span class="@(change == "ФЛК пройден" ? "status" : "")">
                                @change
                            </span>
                        </Template>
                    </GridColumn>
                                
                    <GridColumn Width="200px"
                                Field="Date" 
                                Title="Дата посл. обновления" 
                                HeaderClass="center-me" 
                                TextAlign="@ColumnTextAlign.Center" />
                    <GridCommandColumn Width="125px">
                        <GridCommandButton Class="grid-button" OnClick="@ReadMore">
                            Подробнее
                        </GridCommandButton>  
                    </GridCommandColumn>
                </GridColumns>
            </TelerikGrid>
        </div>
    </DrawerContent>
</TelerikDrawer>

<style>
    .grid-button,
    .grid-button:hover{
        background-color: #749ebc;
        color: white;
        width: 100px;
        height: 25px;
    }

    .k-grid th.center-me {
        text-align: center;
    }

    .status {
        background-color: #81fdff;
        padding: 4px 15px;
        border-radius: 6px;
    }

    th.center-me .k-cell-inner > .k-link {
        justify-content: center;
    }
</style>



@code {
    [Parameter]
    public string id { get; set; }

    private IEnumerable<Files> GridData { get; set; } = new List<Files>();

    TelerikDrawer<DrawerItem> DrawerRef { get; set; } = default!;

    TelerikGrid<Files> GridRef { get; set; } = default!;

    DrawerItem SelectedItem { get; set; } = DrawerItem.None();

    List<DrawerItem> NavigablePages { get; set; } = new List<DrawerItem>
        {
            new DrawerItem { Text = "МО 1", Url = "upload/1", Icon = SvgIcon.Plus, MedId = "1"},
            new DrawerItem { Text = "МО 2", Url = "upload/2", Icon = SvgIcon.Plus, MedId = "2"},
            new DrawerItem { Text = "МО 3", Url = "upload/3", Icon = SvgIcon.Plus, MedId = "3"},
            new DrawerItem { Text = "МО 4", Url = "upload/4", Icon = SvgIcon.Plus, MedId = "4"},
        };

    private List<Files> FilesList { get; set; } = new List<Files>
    {
        new Files
        {
            Id=1,
            MedId="1",
            Med="ЧУЗ \"МСЧ\"",
            File="B30000240101.packet",
            Status="ФЛК пройден",
            Date=DateTime.Parse("01.01.2024 13:55")
        },
        new Files
        {
            Id=1,
            MedId="2",
            Med="Тест2",
            File="Тест2",
            Status="ФЛК пройден",
            Date=DateTime.Parse("01.01.2024 13:55")
        },
        new Files
        {
            Id=1,
            MedId="3",
            Med="Тест3",
            File="Тест3",
            Status="ФЛК пройден",
            Date=DateTime.Parse("01.01.2024 13:55")
        },
        new Files
        {
            Id=1,
            MedId="4",
            Med="Тест4",
            File="тест4",
            Status="ФЛК пройден",
            Date=DateTime.Parse("01.01.2024 13:55")
        },
    };



    protected override void OnInitialized()
    {

        GridData = FilesList.Where(w => w.MedId == id);


        SelectedItem = NavigablePages.FirstOrDefault(w => w.MedId == id);

        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        GridRef?.Rebind();

        base.OnParametersSet();
    }


    private string GetChange(Files stock) => stock.Status;

    private void ReadMore(GridCommandEventArgs args)
    {
        
    }
}
